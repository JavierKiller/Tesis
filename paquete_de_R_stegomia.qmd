## Paquete de R para cálculos de índices Estegomía

### Funciones para limpieza y formato de las bases de datos

#### Función load_raw_data {.unnumbered}

La función load_raw_data está diseñada para cargar datos sin procesar de un archivo .txt relacionado con un estudio de entomología realizado en la plataforma "Vigilancia Entomológica y Control Integral del Vector". La función recibe el parámetro denominado "path" (cadena de texto): la cual es ruta del archivo .txt que contiene los datos sin procesar. Se espera que siga el formato utilizado en la actividad "Estudios entomológicos en fase larval y pupal" de la plataforma "Vigilancia Entomológica".

Asimismo, el parámetro "col_name" (vector de cadenas de texto, opcional): los nombres de las variables que se desean seleccionar del archivo. Si no se especifica este parámetro, la función selecciona por defecto las siguientes variables:

"Tipo de Estudio", "Jurisdiccion", "Localidad", "Sector", "Fecha de Inicio", "Semana Epidemiologica", "Casas Revisadas", "Casas Positivas", "Total de Recipientes con Agua" y "Total de Recipientes Positivos"

Una vez que se agregan estos parámetros la función carga el archivo para leerlo usando el parámetro path. Se configura la lectura para que asuma nombres de columna en la primera fila (col_names = TRUE) y establece la codificación en UTF-16 (locale = locale(encoding = "UTF-16")) para manejar correctamente los caracteres particulares que tiene el archivo .txt cuando se descarga de la plataforma "Vigilancia Entomológica y Control Integral del Vector".

Luego continúa a verificar si la columna "Tipo de Estudio" está presente en el archivo. Si no lo está, o si el archivo está vacío, la función marca un error para evitar que se procesen datos incorrectos.

Con la selecciona variables, si se proporcionó el parámetro col_name, se usarán solo esas las variables; se limpiará los nombres de columna reemplazando todos los espacios en blanco de los nombres de las columnas con guiones bajos (\_) para garantizar la compatibilidad con el formato estándar de datos de R.

Si se seleccionaron las columnas "Localidad", "Municipio", o "Jurisdiccion" en el archivo, cada una se separa en dos columnas nuevas. Por ejemplo, si "Localidad" tiene un formato que combina números con nombres, por lo que se dividirá en "Clave_Localidad" y "Localidad" (eliminando el espacio y reemplazándolo con un guion bajo).

Al final se devuelve un marco de datos de R (data.frame) que contiene las variables seleccionadas y limpiadas del archivo .txt. Este marco de datos está listo para ser utilizado en sus análisis posteriores.

Ejemplo de uso:

``` r
library(rStegomyia)

path_raw_data <- system.file("extdata", "estudio_entomologico1.txt", package = "rStegomyia")

# Carga los datos con las variables predeterminadas
df_load_raw <- load_raw_data(path_raw_data)
```

<!-- # Muestra las primeras filas del marco de datos cargado -->

<!-- head(df_load_raw) -->

#### Función clean_raw_data {.unnumbered}

Está función fue diseñada para limpiar y reformatear un dataframe que ha sido generado previamente por la función load_raw_data. Dicho dataframe contiene datos de un estudio de entomología realizado en la plataforma "Vigilancia Entomológica y Control Integral del Vector".

Recibe el parámetro df: Es un dataframe que se quiere limpiar y reformatear. Este dataframe debe provenir de la función load_raw_data.

El parámetro path_out (cadena de texto, opcional): es la ruta y nombre del archivo .csv donde se guardarán los datos limpios. El valor predeterminado es "data-raw/qr.csv".

col_name (lista): Una lista que define los tipos de datos y niveles de factor (en caso de ser factor) para cada columna del marco de datos. Esta lista debe ser congruente con las variables seleccionadas en la función load_raw_data.Si no se especifica este parámetro, la función selecciona por defecto las siguientes variables:

``` r
Tipo_de_Estudio = col_factor(levels = c( "Encuesta", "Verificacion")),
Clave_Jurisdiccion = col_factor(levels = as.character(c( 2601, 2602, 2603, 2604, 2605, 2606))),
Jurisdiccion = col_factor(levels = c( "Hermosillo", "Caborca", "Cananea", "Cajeme", "Navojoa", "San_Luis_Río_Colorado" )),
Clave_Municipio = col_factor(levels = as.character(1:72)),
Municipio = col_factor(),
Clave_Localidad = col_factor(),
Localidad = col_factor(),
Sector = col_factor(levels = as.character(1:2000)),
Fecha_de_Inicio = col_date(format = "%d/%m/%Y"),
Semana_Epidemiologica = col_factor(levels = as.character(1:53)),
Casas_Revisadas = col_double(),
Casas_Positivas = col_double(),
Total_de_Recipientes_con_Agua = col_double(),
Total_de_Recipientes_Positivos = col_double()
```

Una vez agregados los parámetros la función guarda el dataframe sin procesar en un archivo .csv temporal utilizando la ruta especificada en path_out o la ruta predeterminada. Continua en leer el archivo con tipos de datos: Luego, la función lee el archivo .csv recién creado utilizando read_csv. Aquí, se especifica el parámetro col_types como la lista col_name para establecer los tipos de datos correctos para cada columna.

Asigna el dataframe limpio (con los tipos de datos corregidos) a una nueva variable temporal para reemplaza el dataframe original de forma que ahora df contiene el marco de datos limpios, y los guarda en el mismo archivo .csv original utilizando la ruta especificada o la ruta predeterminada.

Al final devuelve el dataframe de datos limpios, que también se ha guardado en el archivo .csv.

Ejemplo de uso:

``` r

path_of_example = system.file("extdata", "qr.csv", package = "rStegomyia")

df_clean <- clean_raw_data(dfsm, path_out = path_of_example)
```

<!-- head(df_clean) -->

### Funciones para calcular los índices Estegomía

Las siguientes funciones se utilizan para calcula los índices Estegomía(índice de Contenedores - CI, índice de Casas - HI, e índice de Breteau - BI) siempre para un tipo de estudio y una o dos variables para filtrar y especificar los datos según la intensión del análisis. Es necesario que el dataframe se proporcione haya sido previamente procesado por las funciones load_raw_data y clean_raw_data

#### Función get_stegomyia_indices_by_type_of_study_and_ew {.unnumbered}

Esta función calcula los índices Estegomíapara un tipo de estudio y una semana epidemiológica específicos.

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). ew (cadena de texto, opcional): El número de la semana epidemiológica utilizada para calcular los índices (por defecto, "1").

Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Semana_Epidemiologica: La semana epidemiológica debe coincidir con el valor especificado en ew. - Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Si los datos son válidos se Calcula los índices Estegomíaselecciona las columnas necesarias: Sector, Casas_Revisadas, Casas_Positivas, Total_de_Recipientes_con_Agua, Total_de_Recipientes_Positivos. Agrupa los datos por sector para calcula: - El Índice de Casa (HI) - El Índice de Contenedor (CI) - El Índice Breteau (BI)

Utilizando las fórmulas especificadas; además se agrega nuevas columnas que representan el estado de riesgo en el valor del índice calculado (index_status_HI, index_status_CI, index_status_BI). Estas columnas utilizan un sistema de clasificación basado en rangos predefinidos (Óptimo, Bueno, Alarma, Emergencia).

Ejemplo de uso:

``` r

df_stegomyia_sd <- get_stegomyia_indices_by_type_of_study_and_ew(df_indx,
                                                                 st = "Verificacion",
                                                                 ew = "2")
```

<!-- head(df_stegomyia_sd) -->

#### Función get_stegomyia_indices_by_type_of_study_and_loc {.unnumbered}

Esta función calcula los índices Estegomíapara un tipo de estudio y una Localidad específicas del estado de Sonora,

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). El parámetro var (cadena de texto): Indica la Localidad a utilizar para calcular los índices. El parámetro path_out (cadena de texto, opcional): es la ruta y nombre del archivo .csv donde se guardarán los datos de los índices Estegomíacalculados y sus correspondientes estatus. El valor predeterminado es "data-raw/statusindicesloc.csv".

Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Localidad: La Localidad o localidades debe coincidir con el valor especificado en var. - Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Si los datos son válidos se Calcula los índices Estegomíaselecciona las columnas necesarias: Localidad, Casas_Revisadas, Casas_Positivas, Total_de_Recipientes_con_Agua, Total_de_Recipientes_Positivos. Agrupa los datos por sector para calcula: - El Índice de Casa (HI) - El Índice de Contenedor (CI) - El Índice Breteau (BI)

Utilizando las fórmulas especificadas; además se agrega nuevas columnas que representan el estado de riesgo en del valor del índice calculado (index_status_HI, index_status_CI, index_status_BI). Estas columnas utilizan un sistema de clasificación basado en rangos predefinidos (Óptimo, Bueno, Alarma, Emergencia).

Al final devuelve el dataframe con los datos calculados, Ademas se ha guardado en el archivo .csv.

Ejemplo de uso:

``` r

path_index_table = c(system.file("extdata",
                                 "statusindicesloc.csv",
                                  package = "rStegomyia"
                                  )
                     )


df_stegomyia_l <- get_stegomyia_indices_by_type_of_study_and_loc(df_indx,
                                                   st = "Verificacion",
                                                   var =c("HERMOSILLO",
                                                    "CIUDAD_OBREGÓN"),
                                                   path_out = path_index_table
               )
```

#### Función get_stegomyia_indices_by_type_of_study_and_star_date {.unnumbered}

Esta función calcula los índices Estegomía para un tipo de estudio y un o más Fechas específicas.

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). date (cadena de texto, opcional): Es la fecha utilizada para calcular los índices (por defecto, "2021/01/07").

Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Fecha_de_Inicio: La fecha debe coincidir con el valor especificado en date. - Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Si los datos son válidos se calcula los índices Estegomía seleccionando las columnas necesarias: Sector, Casas_Revisadas, Casas_Positivas, Total_de_Recipientes_con_Agua, Total_de_Recipientes_Positivos. Agrupa los datos por sector para calcula: - El Índice de Casa (HI) - El Índice de Contenedor (CI) - El Índice Breteau (BI)

Utilizando las fórmulas especificadas; además se agregan nuevas columnas que representan el estado de riesgo en el valor del índice calculado (index_status_HI, index_status_CI, index_status_BI). Estas columnas utilizan un sistema de clasificación basado en rangos predefinidos (Óptimo, Bueno, Alarma, Emergencia).

Ejemplo de uso:

``` r

df_stegomyia_sd <- get_stegomyia_indices_by_type_of_study_and_star_date(df_indx,
                                                     st = "Verificacion",
                                                     date = "2021/01/06")
```

<!-- head(df_stegomyia_sd) -->

#### Función get_stegomyia_indices_by_type_of_study_and_geo_is {.unnumbered}

Esta función calcula los índices Estegomía para un tipo de estudio y uno o más Sectores específicas del estado de Sonora,

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). El parámetro var (el numero del sector): Indica el o los sectores a utilizar para calcular los índices. El parámetro path_out (cadena de texto, opcional): es la ruta y nombre del archivo .csv donde se guardarán los datos de los índices Estegomía calculados y sus correspondientes estatus. El valor predeterminado es "data-raw/statusindicesector.csv".

Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Sector: Los sectores deben coincidir con el valor especificado en var. - Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Si los datos son válidos se calcula los índices Estegomía seleccionado las columnas necesarias: Sector, Casas_Revisadas, Casas_Positivas, Total_de_Recipientes_con_Agua, Total_de_Recipientes_Positivos. Agrupa los datos por sector para calcular: - El Índice de Casa (HI) - El Índice de Contenedor (CI) - El Índice Breteau (BI)

Utilizando las fórmulas especificadas; Además se agrega nuevas columnas que representan el estado de riesgo en del valor del índice calculado (index_status_HI, index_status_CI, index_status_BI). Estas columnas utilizan un sistema de clasificación basado en rangos predefinidos (Óptimo, Bueno, Alarma, Emergencia).

Al final devuelve el dataframe con los datos calculados, Además se ha guardado en el archivo .csv.

Ejemplo de uso:

``` r

path_index_table = c(system.file("extdata",
                                 "statusindicesector.csv",
                                  package = "rStegomyia"
                                  )
                     )


df_stegomyia <- get_stegomyia_indices_by_type_of_study_and_geo_is(df_indx,
                                                   st = "Verificacion",
                                                   var ="400",
                                                   path_out = path_index_table
  )
```

#### Función get_stegomyia_indices_by_type_of_study_star_date_and_geo {.unnumbered}

Esta función calcula los índices Estegomía para un tipo de estudio, una o más fechas y uno o más Sectores específicas del estado de Sonora,

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). El parámetro var (el número del sector): Indica el o los sectores a utilizar para calcular los índices. El parámetro date (cadena de texto, opcional): Es la fecha utilizada para calcular los índices (por defecto, "2021/01/07"). - Fecha_de_Inicio: La fecha debe coincidir con el valor especificado en date. Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Sector: Los sectores deben coincidir con el valor especificado en var.

Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Si los datos son válidos se Calcula los índices Estegomía seleccionando las columnas necesarias: Sector, Casas_Revisadas, Casas_Positivas, Total_de_Recipientes_con_Agua, Total_de_Recipientes_Positivos. Agrupa los datos por sector para calcula: - El Índice de Casa (HI) - El Índice de Contenedor (CI) - El Índice Breteau (BI)

Utilizando las fórmulas especificadas; además se agrega nuevas columnas que representan el estado de riesgo en el valor del índice calculado (index_status_HI, index_status_CI, index_status_BI). Estas columnas utilizan un sistema de clasificación basado en rangos predefinidos (Óptimo, Bueno, Alarma, Emergencia).

Ejemplo de uso:

``` r
df_tc <-get_typology_container_by_type_of_study_and_location(df_typ,
                                                             st = "Verificacion",
                                                             "CIUDAD_OBREGÓN"
)
```

<!-- head(df_tc) -->

#### Función get_typology_container_by_type_of_study_and_location {.unnumbered}

Cuando ya se ha identificado una localidad en emergencia por riego entomológico se necesita saber qué tipo de criaderos son los que están presentes para tomar las medidas apropiadas. Esta función proporciona una herramienta útil para entender la distribución de los tipos de recipientes positivos en diferentes localidades y, por lo tanto, para diseñar estrategias más efectivas de control de vectores

Recibe el parámetro df: dataframe que contiene la información limpia procesada por la función clean_raw_data. st (cadena de texto, opcional): El tipo de estudio seleccionado. Debe ser "Encuesta" o "Verificacion" (por defecto, "Verificacion"). El parámetro var (cadena de texto): Indica la Localidad a utilizar para calcular el porcentaje de los contenedores positivos.

Una vez agregados los parámetros se filtra los datos del dataframe original (df) para seleccionar solo las filas que cumplen con las siguientes condiciones: - Tipo_de_Estudio: El tipo de estudio debe coincidir con el valor especificado en st. - Localidad: La Localidad o localidades debe coincidir con el valor especificado en var. - Comprueba la validez de los datos: Si el filtrado no tiene datos en ninguna fila se genera un error para indicar que no hay datos disponibles con los filtros aplicados. Si hay filas con valor 0 en la columna Casas_Revisadas, se genera una advertencia y filtra esas filas para evitar un error al dividir entre cero.

Calcula los porcentajes: Para cada localidad, se calculan los porcentajes de recipientes positivos de cada tipología (tratables, controlables y eliminables) respecto al total de recipientes positivos.

Los resultados se agrupan por localidad y se presentan en un nuevo dataframe.

Ejemplo de uso:

``` r
df_tc <-get_typology_container_by_type_of_study_and_location(df_typ,
                                                             st = "Verificacion",
                                                             "CIUDAD_OBREGÓN"
)
```

<!-- head(df_tc) -->

### Funciones para hacer mapas

#### Función get_maps_stegomyia_indices {.unnumbered}

Esta función genera mapas geográficos de los índices Estegomía calculados para diferentes sectores, lo que permite visualizar espacialmente los índices Estegomía, lo que facilita la identificación de áreas de riesgo y la toma de decisiones informadas para el control de vectores.

Recibe el parámetro df: Un dataframe que contiene información sobre los sectores y sus respectivos índices Estegomía (HI, CI, BI).

Además, utiliza por default objetos shapefile para generar los mapas: - m1 es un shapefile que contiene información geográfica sobre los sectores de Hermosillo (geometría de los sectores). - m0 es un shapefile que contiene información geográfica sobre los límites de Hermosillo (geometría de la ciudad).

Una vez que resibe el dataframe, verifica los datos entrada contenga las columnas necesarias para calcular los índices Estegomía.

Prepara el shapefile que se transforma el shapefile m1 a un sistema de coordenadas adecuado (EPSG:4326) y se renombra la columna "SECCION" a "Sector" para poder unirlo con el dataframe.

Une el dataframe con el shapefile la columna "Sector" como clave.

Genera los mapas: Se crean tres mapas utilizando la librería ggplot2: Mapa del Índice de Casa (HI): Visualiza la distribución espacial del HI en los diferentes sectores.

Mapa del Índice de Contenedor (CI): Visualiza la distribución espacial del CI en los diferentes sectores.

Mapa del Índice Breteau (BI): Visualiza la distribución espacial del BI en los diferentes sectores de Hermosillo.

Guarda los mapas como archivos PNG en la carpeta "visualization".

Devuelve los mapas en una lista que contiene los tres objetos ggplot generados.

Ejemplo de uso:

``` r
Sindx_maps <- get_maps_stegomyia_indices(df_for_map)

Sindx_maps
```

![](imagenes/p_HI.png) ![](imagenes/p_CI.png) ![](imagenes/p_BI.png)

#### Función get_1map_stegomyia_indices {.unnumbered}

Esta función genera una visualización más interactiva y completa de los índices Estegomía, permitiendo al usuario explorar los datos de manera más flexible y comparar los diferentes índices en un mismo mapa de los índices Estegomía calculados para diferentes sectores.

Recibe el parámetro df: Un dataframe que contiene información sobre los sectores y sus respectivos índices Estegomía (HI, CI, BI).

Además, utiliza por default objetos shapefile para generar los mapas: - m1 es un shapefile que contiene información geográfica sobre los sectores de Hermosillo (geometría de los sectores). - m0 es un shapefile que contiene información geográfica sobre los límites de Hermosillo (geometría de la ciudad).

Una vez que recibe el dataframe, verifica que los datos de entrada contengan las columnas necesarias para calcular los índices Estegomía.

Prepara el shapefile que se transforma el shapefile m1 a un sistema de coordenadas adecuado (EPSG:4326) y se renombra la columna "SECCION" a "Sector" para poder unirlo con el dataframe.

Une el dataframe con el shapefile la columna "Sector" como clave.

Genera el mapa interactivo utilizando la librería leaflet. Permite al usuario seleccionar qué índice visualizar y obtener información detallada al hacer clic en cada sector

Guarda el mapa interactivo como un archivo HTML en la carpeta "visualization".

Devuelve el objeto del mapa generado por leaflet.

Ejemplo de uso:

``` r
Sindx_map <- get_1map_stegomyia_indices(df_for_map)

Sindx_map
```

<!-- ![](visualization/Indices_Stegomyia.html) -->

<iframe src="visualization/Indices_Stegomyia.html" width="100%" height="600px" frameborder="0">

</iframe>
